(self.webpackChunk_brick_hooks_root=self.webpackChunk_brick_hooks_root||[]).push([[1184],{78805:function(l,o,n){"use strict";n.r(o);var e=n(62472),s=n(34019),r=n(94834),c=e.memo(t=>{var a=t.demos;return e.createElement(e.Fragment,null,e.createElement("div",{className:"markdown"},e.createElement("h2",{id:"usetrim"},e.createElement(s.AnchorLink,{to:"#usetrim","aria-hidden":"true",tabIndex:-1},e.createElement("span",{className:"icon icon-link"})),"useTrim"),e.createElement("p",null,"\u5BF9\u5B57\u7B26\u4E32\u6570\u636E\u8FDB\u884C\u81EA\u52A8\u53BB\u6389\u7A7A\u683C\u7684\u5904\u7406"),e.createElement("h3",{id:"\u7528\u6CD5"},e.createElement(s.AnchorLink,{to:"#\u7528\u6CD5","aria-hidden":"true",tabIndex:-1},e.createElement("span",{className:"icon icon-link"})),"\u7528\u6CD5"),e.createElement(r.Z,{code:`function MyComponent(props) {
  // \u9ED8\u8BA4\u4EC5\u79FB\u9664\u9996\u5C3E\u7A7A\u683C
  const trimedText = useTrim(props.text) // ' ss ss ' => 'ss sss'
  const trimedText = useTrim(props.text, true) // ' ss ss ' => 'sssss'
}`,lang:"javascript"})))});o.default=t=>{var a=e.useContext(s.context),i=a.demos;return e.useEffect(()=>{var u;t!=null&&(u=t.location)!==null&&u!==void 0&&u.hash&&s.AnchorLink.scrollToAnchor(decodeURIComponent(t.location.hash.slice(1)))},[]),e.createElement(c,{demos:i})}}}]);
